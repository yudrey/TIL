/*
	* @mixin Syntax :
		@mixin name {
			property: value;
			property: value;
			...
		}

	* @include mixin Syntax :
		selector {
			@include mixin-name;
		}
*/

@mixin center-element {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;    
    align-content: center;
    align-items: center;
}
/* 
	Usage :
		.selector {
			@include center-element;
		}
*/

@mixin hide-text {
    overflow: hidden;
    position: absolute;
    border: 0;
    width: 1px;
    height: 1px;
    clip: rect(1px, 1px, 1px, 1px);
}
/* 
	Usage :
		.selector {
			@include hide-text;
		}
*/

@mixin line($lineCount: 1) {
    @if $lineCount == 1 {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    } @else {
        -webkit-box-orient: vertical;
        display: block;
        display: -webkit-box;
        overflow: hidden;
        text-overflow: ellipsis;
        word-break: break-all;
        -webkit-line-clamp: $lineCount;
    }
}
/* 
	Usage :
		.selector {
			@include line(라인수);
		}
*/

@mixin clearfix {
    &:after {
        display: table;
        clear: both;
        width: 100%;
        height: 1px;
        content: '';
    }
}
/* 
	Usage :
		.selector {
			@include clearfix;
		}
*/

@mixin device($breakpoint) {
    @if $breakpoint == desktop {
        @media only screen and (min-width: 2001px) {
            @content;
        }
    }
    @if $breakpoint == tablet {
        @media only screen and (min-width: 1200px) and (max-width: 2000px) {
            @content;
        }
    }
    @if $breakpoint == mobile {
        @media only screen and (max-width: 1199px) {
            @content;
        }
    }
}
/*
	Usage :
		.selector {
			@include device(pc) {
				width: 100%;
			}
		}
*/

@mixin transition($time) {
    @each $prefix in -moz-, -o-, -webkit-, '' {
        #{prefix}transition: $value;
    }
}
/*
	Usage :
		.selector {
			@include transition(0.3s);
		}
*/
